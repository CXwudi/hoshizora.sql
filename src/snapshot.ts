export const snapshot = {
	namespaces: [],
	tables: [
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				artist_type: {
					name: 'artist_type',
					type: "enum('Unknown', 'Circle', 'Label', 'Producer', 'Animator', 'Illustrator', 'Lyricist', 'Vocaloid', 'UTAU', 'CeVIO', 'OtherVoiceSynthesizer', 'OtherVocalist', 'OtherGroup', 'OtherIndividual', 'Utaite', 'Band', 'Vocalist', 'Character', 'SynthesizerV', 'CoverArtist')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'Unknown',
						'Circle',
						'Label',
						'Producer',
						'Animator',
						'Illustrator',
						'Lyricist',
						'Vocaloid',
						'UTAU',
						'CeVIO',
						'OtherVoiceSynthesizer',
						'OtherVocalist',
						'OtherGroup',
						'OtherIndividual',
						'Utaite',
						'Band',
						'Vocalist',
						'Character',
						'SynthesizerV',
						'CoverArtist',
					],
					mappedType: 'enum',
				},
				base_voicebank_id: {
					name: 'base_voicebank_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				description_original: {
					name: 'description_original',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				description_english: {
					name: 'description_english',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				main_picture_mime: {
					name: 'main_picture_mime',
					type: 'varchar(32)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 32,
					mappedType: 'string',
				},
				release_date: {
					name: 'release_date',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 0,
					mappedType: 'datetime',
				},
				default_name_language: {
					name: 'default_name_language',
					type: "enum('Unspecified', 'Japanese', 'Romaji', 'English')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Unspecified', 'Japanese', 'Romaji', 'English'],
					mappedType: 'enum',
				},
				japanese_name: {
					name: 'japanese_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				english_name: {
					name: 'english_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				romaji_name: {
					name: 'romaji_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
			},
			name: 'artists',
			indexes: [
				{
					columnNames: ['base_voicebank_id'],
					composite: false,
					keyName: 'artists_base_voicebank_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artists_base_voicebank_id_foreign: {
					constraintName: 'artists_base_voicebank_id_foreign',
					columnNames: ['base_voicebank_id'],
					localTableName: 'artists',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				group_id: {
					name: 'group_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				member_id: {
					name: 'member_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				link_type: {
					name: 'link_type',
					type: "enum('CharacterDesigner', 'Group', 'Illustrator', 'Manager', 'VoiceProvider')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'CharacterDesigner',
						'Group',
						'Illustrator',
						'Manager',
						'VoiceProvider',
					],
					mappedType: 'enum',
				},
			},
			name: 'artists_for_artists',
			indexes: [
				{
					columnNames: ['group_id'],
					composite: false,
					keyName: 'artists_for_artists_group_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['member_id'],
					composite: false,
					keyName: 'artists_for_artists_member_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artists_for_artists_group_id_foreign: {
					constraintName: 'artists_for_artists_group_id_foreign',
					columnNames: ['group_id'],
					localTableName: 'artists_for_artists',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					updateRule: 'cascade',
				},
				artists_for_artists_member_id_foreign: {
					constraintName: 'artists_for_artists_member_id_foreign',
					columnNames: ['member_id'],
					localTableName: 'artists_for_artists',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				language: {
					name: 'language',
					type: 'varchar(16)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 16,
					mappedType: 'string',
				},
				value: {
					name: 'value',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'artist_names',
			indexes: [
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artist_names_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artist_names_artist_id_foreign: {
					constraintName: 'artist_names_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artist_names',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				created: {
					name: 'created',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 0,
					mappedType: 'datetime',
				},
				mime: {
					name: 'mime',
					type: 'varchar(32)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 32,
					mappedType: 'string',
				},
				name: {
					name: 'name',
					type: 'varchar(200)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 200,
					mappedType: 'string',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'artist_picture_files',
			indexes: [
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artist_picture_files_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artist_picture_files_artist_id_foreign: {
					constraintName: 'artist_picture_files_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artist_picture_files',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Official', 'Commercial', 'Reference', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Official', 'Commercial', 'Reference', 'Other'],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				url: {
					name: 'url',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				disabled: {
					name: 'disabled',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'artist_web_links',
			indexes: [
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artist_web_links_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artist_web_links_artist_id_foreign: {
					constraintName: 'artist_web_links_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artist_web_links',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Unspecified', 'AlbumRelease', 'Anniversary', 'Club', 'Concert', 'Contest', 'Convention', 'Other', 'Festival')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'Unspecified',
						'AlbumRelease',
						'Anniversary',
						'Club',
						'Concert',
						'Contest',
						'Convention',
						'Other',
						'Festival',
					],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				main_picture_mime: {
					name: 'main_picture_mime',
					type: 'varchar(32)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 32,
					mappedType: 'string',
				},
				default_name_language: {
					name: 'default_name_language',
					type: "enum('Unspecified', 'Japanese', 'Romaji', 'English')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Unspecified', 'Japanese', 'Romaji', 'English'],
					mappedType: 'enum',
				},
				japanese_name: {
					name: 'japanese_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				english_name: {
					name: 'english_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				romaji_name: {
					name: 'romaji_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
			},
			name: 'release_event_series',
			indexes: [
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Unspecified', 'AlbumRelease', 'Anniversary', 'Club', 'Concert', 'Contest', 'Convention', 'Other', 'Festival')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'Unspecified',
						'AlbumRelease',
						'Anniversary',
						'Club',
						'Concert',
						'Contest',
						'Convention',
						'Other',
						'Festival',
					],
					mappedType: 'enum',
				},
				date: {
					name: 'date',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 0,
					mappedType: 'datetime',
				},
				description: {
					name: 'description',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				main_picture_mime: {
					name: 'main_picture_mime',
					type: 'varchar(32)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 32,
					mappedType: 'string',
				},
				series_id: {
					name: 'series_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				series_number: {
					name: 'series_number',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				default_name_language: {
					name: 'default_name_language',
					type: "enum('Unspecified', 'Japanese', 'Romaji', 'English')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Unspecified', 'Japanese', 'Romaji', 'English'],
					mappedType: 'enum',
				},
				japanese_name: {
					name: 'japanese_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				english_name: {
					name: 'english_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				romaji_name: {
					name: 'romaji_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				venue_name: {
					name: 'venue_name',
					type: 'varchar(1000)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 1000,
					mappedType: 'string',
				},
			},
			name: 'release_events',
			indexes: [
				{
					columnNames: ['series_id'],
					composite: false,
					keyName: 'release_events_series_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_events_series_id_foreign: {
					constraintName: 'release_events_series_id_foreign',
					columnNames: ['series_id'],
					localTableName: 'release_events',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_event_series',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				language: {
					name: 'language',
					type: 'varchar(16)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 16,
					mappedType: 'string',
				},
				value: {
					name: 'value',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				release_event_id: {
					name: 'release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'release_event_names',
			indexes: [
				{
					columnNames: ['release_event_id'],
					composite: false,
					keyName: 'release_event_names_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_event_names_release_event_id_foreign: {
					constraintName:
						'release_event_names_release_event_id_foreign',
					columnNames: ['release_event_id'],
					localTableName: 'release_event_names',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				author: {
					name: 'author',
					type: 'varchar(100)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 100,
					mappedType: 'string',
				},
				name: {
					name: 'name',
					type: 'varchar(200)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 200,
					mappedType: 'string',
				},
				pv_id: {
					name: 'pv_id',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				pv_type: {
					name: 'pv_type',
					type: "enum('Original', 'Reprint', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Original', 'Reprint', 'Other'],
					mappedType: 'enum',
				},
				service: {
					name: 'service',
					type: "enum('NicoNicoDouga', 'Youtube', 'SoundCloud', 'Vimeo', 'Piapro', 'Bilibili', 'File', 'LocalFile', 'Creofuga', 'Bandcamp')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'NicoNicoDouga',
						'Youtube',
						'SoundCloud',
						'Vimeo',
						'Piapro',
						'Bilibili',
						'File',
						'LocalFile',
						'Creofuga',
						'Bandcamp',
					],
					mappedType: 'enum',
				},
				extended_metadata: {
					name: 'extended_metadata',
					type: 'json',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'json',
				},
				publish_date: {
					name: 'publish_date',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 0,
					mappedType: 'datetime',
				},
				release_event_id: {
					name: 'release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'pvs_for_release_events',
			indexes: [
				{
					columnNames: ['release_event_id'],
					composite: false,
					keyName: 'pvs_for_release_events_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				pvs_for_release_events_release_event_id_foreign: {
					constraintName:
						'pvs_for_release_events_release_event_id_foreign',
					columnNames: ['release_event_id'],
					localTableName: 'pvs_for_release_events',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				name: {
					name: 'name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'string',
				},
				roles: {
					name: 'roles',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				release_event_id: {
					name: 'release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'artists_for_release_events',
			indexes: [
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artists_for_release_events_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['release_event_id'],
					composite: false,
					keyName:
						'artists_for_release_events_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artists_for_release_events_artist_id_foreign: {
					constraintName:
						'artists_for_release_events_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artists_for_release_events',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
				artists_for_release_events_release_event_id_foreign: {
					constraintName:
						'artists_for_release_events_release_event_id_foreign',
					columnNames: ['release_event_id'],
					localTableName: 'artists_for_release_events',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				description_original: {
					name: 'description_original',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				description_english: {
					name: 'description_english',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				disc_type: {
					name: 'disc_type',
					type: "enum('Unknown', 'Album', 'Single', 'EP', 'SplitAlbum', 'Compilation', 'Video', 'Artbook', 'Game', 'Fanmade', 'Instrumental', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'Unknown',
						'Album',
						'Single',
						'EP',
						'SplitAlbum',
						'Compilation',
						'Video',
						'Artbook',
						'Game',
						'Fanmade',
						'Instrumental',
						'Other',
					],
					mappedType: 'enum',
				},
				main_picture_mime: {
					name: 'main_picture_mime',
					type: 'varchar(32)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 32,
					mappedType: 'string',
				},
				original_release_cat_num: {
					name: 'original_release_cat_num',
					type: 'varchar(50)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 50,
					mappedType: 'string',
				},
				original_release_day: {
					name: 'original_release_day',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				original_release_month: {
					name: 'original_release_month',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				original_release_release_event_id: {
					name: 'original_release_release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				original_release_year: {
					name: 'original_release_year',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				default_name_language: {
					name: 'default_name_language',
					type: "enum('Unspecified', 'Japanese', 'Romaji', 'English')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Unspecified', 'Japanese', 'Romaji', 'English'],
					mappedType: 'enum',
				},
				japanese_name: {
					name: 'japanese_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				english_name: {
					name: 'english_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				romaji_name: {
					name: 'romaji_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
			},
			name: 'albums',
			indexes: [
				{
					columnNames: ['original_release_release_event_id'],
					composite: false,
					keyName: 'albums_original_release_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				albums_original_release_release_event_id_foreign: {
					constraintName:
						'albums_original_release_release_event_id_foreign',
					columnNames: ['original_release_release_event_id'],
					localTableName: 'albums',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				author: {
					name: 'author',
					type: 'varchar(100)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 100,
					mappedType: 'string',
				},
				name: {
					name: 'name',
					type: 'varchar(200)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 200,
					mappedType: 'string',
				},
				pv_id: {
					name: 'pv_id',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				pv_type: {
					name: 'pv_type',
					type: "enum('Original', 'Reprint', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Original', 'Reprint', 'Other'],
					mappedType: 'enum',
				},
				service: {
					name: 'service',
					type: "enum('NicoNicoDouga', 'Youtube', 'SoundCloud', 'Vimeo', 'Piapro', 'Bilibili', 'File', 'LocalFile', 'Creofuga', 'Bandcamp')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'NicoNicoDouga',
						'Youtube',
						'SoundCloud',
						'Vimeo',
						'Piapro',
						'Bilibili',
						'File',
						'LocalFile',
						'Creofuga',
						'Bandcamp',
					],
					mappedType: 'enum',
				},
				extended_metadata: {
					name: 'extended_metadata',
					type: 'json',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'json',
				},
				publish_date: {
					name: 'publish_date',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 0,
					mappedType: 'datetime',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'pvs_for_albums',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'pvs_for_albums_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				pvs_for_albums_album_id_foreign: {
					constraintName: 'pvs_for_albums_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'pvs_for_albums',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				name: {
					name: 'name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'string',
				},
				is_support: {
					name: 'is_support',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				roles: {
					name: 'roles',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'artists_for_albums',
			indexes: [
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artists_for_albums_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'artists_for_albums_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artists_for_albums_artist_id_foreign: {
					constraintName: 'artists_for_albums_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artists_for_albums',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
				artists_for_albums_album_id_foreign: {
					constraintName: 'artists_for_albums_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'artists_for_albums',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Official', 'Commercial', 'Reference', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Official', 'Commercial', 'Reference', 'Other'],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				url: {
					name: 'url',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				disabled: {
					name: 'disabled',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'album_web_links',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'album_web_links_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				album_web_links_album_id_foreign: {
					constraintName: 'album_web_links_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'album_web_links',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				created: {
					name: 'created',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 0,
					mappedType: 'datetime',
				},
				mime: {
					name: 'mime',
					type: 'varchar(32)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 32,
					mappedType: 'string',
				},
				name: {
					name: 'name',
					type: 'varchar(200)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 200,
					mappedType: 'string',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'album_picture_files',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'album_picture_files_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				album_picture_files_album_id_foreign: {
					constraintName: 'album_picture_files_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'album_picture_files',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				language: {
					name: 'language',
					type: 'varchar(16)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 16,
					mappedType: 'string',
				},
				value: {
					name: 'value',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'album_names',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'album_names_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				album_names_album_id_foreign: {
					constraintName: 'album_names_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'album_names',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				value: {
					name: 'value',
					type: 'varchar(50)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 50,
					mappedType: 'string',
				},
			},
			name: 'album_identifiers',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'album_identifiers_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				album_identifiers_album_id_foreign: {
					constraintName: 'album_identifiers_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'album_identifiers',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				disc_number: {
					name: 'disc_number',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				media_type: {
					name: 'media_type',
					type: "enum('Audio', 'Video')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Audio', 'Video'],
					mappedType: 'enum',
				},
				name: {
					name: 'name',
					type: 'varchar(200)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 200,
					mappedType: 'string',
				},
			},
			name: 'album_disc_properties',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'album_disc_properties_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				album_disc_properties_album_id_foreign: {
					constraintName: 'album_disc_properties_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'album_disc_properties',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				language: {
					name: 'language',
					type: 'varchar(16)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 16,
					mappedType: 'string',
				},
				value: {
					name: 'value',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				release_event_series_id: {
					name: 'release_event_series_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'release_event_series_names',
			indexes: [
				{
					columnNames: ['release_event_series_id'],
					composite: false,
					keyName:
						'release_event_series_names_release_event_series_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_event_series_names_release_event_series_id_foreign: {
					constraintName:
						'release_event_series_names_release_event_series_id_foreign',
					columnNames: ['release_event_series_id'],
					localTableName: 'release_event_series_names',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_event_series',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Official', 'Commercial', 'Reference', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Official', 'Commercial', 'Reference', 'Other'],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				url: {
					name: 'url',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				disabled: {
					name: 'disabled',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				release_event_series_id: {
					name: 'release_event_series_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'release_event_series_web_links',
			indexes: [
				{
					columnNames: ['release_event_series_id'],
					composite: false,
					keyName:
						'release_event_series_web_links_release_event_series_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_event_series_web_links_release_event_series_id_foreign:
					{
						constraintName:
							'release_event_series_web_links_release_event_series_id_foreign',
						columnNames: ['release_event_series_id'],
						localTableName: 'release_event_series_web_links',
						referencedColumnNames: ['id'],
						referencedTableName: 'release_event_series',
						updateRule: 'cascade',
					},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Official', 'Commercial', 'Reference', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Official', 'Commercial', 'Reference', 'Other'],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				url: {
					name: 'url',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				disabled: {
					name: 'disabled',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				release_event_id: {
					name: 'release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'release_event_web_links',
			indexes: [
				{
					columnNames: ['release_event_id'],
					composite: false,
					keyName: 'release_event_web_links_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_event_web_links_release_event_id_foreign: {
					constraintName:
						'release_event_web_links_release_event_id_foreign',
					columnNames: ['release_event_id'],
					localTableName: 'release_event_web_links',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				length_seconds: {
					name: 'length_seconds',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				max_milli_bpm: {
					name: 'max_milli_bpm',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				min_milli_bpm: {
					name: 'min_milli_bpm',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				nico_id: {
					name: 'nico_id',
					type: 'varchar(20)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 20,
					mappedType: 'string',
				},
				notes_original: {
					name: 'notes_original',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				notes_english: {
					name: 'notes_english',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				original_version_id: {
					name: 'original_version_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				publish_date: {
					name: 'publish_date',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 0,
					mappedType: 'datetime',
				},
				release_event_id: {
					name: 'release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				song_type: {
					name: 'song_type',
					type: "enum('Unspecified', 'Original', 'Remaster', 'Remix', 'Cover', 'Arrangement', 'Instrumental', 'Mashup', 'MusicPV', 'DramaPV', 'Live', 'Illustration', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'Unspecified',
						'Original',
						'Remaster',
						'Remix',
						'Cover',
						'Arrangement',
						'Instrumental',
						'Mashup',
						'MusicPV',
						'DramaPV',
						'Live',
						'Illustration',
						'Other',
					],
					mappedType: 'enum',
				},
				default_name_language: {
					name: 'default_name_language',
					type: "enum('Unspecified', 'Japanese', 'Romaji', 'English')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Unspecified', 'Japanese', 'Romaji', 'English'],
					mappedType: 'enum',
				},
				japanese_name: {
					name: 'japanese_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				english_name: {
					name: 'english_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				romaji_name: {
					name: 'romaji_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
			},
			name: 'songs',
			indexes: [
				{
					columnNames: ['original_version_id'],
					composite: false,
					keyName: 'songs_original_version_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['release_event_id'],
					composite: false,
					keyName: 'songs_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				songs_original_version_id_foreign: {
					constraintName: 'songs_original_version_id_foreign',
					columnNames: ['original_version_id'],
					localTableName: 'songs',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
				songs_release_event_id_foreign: {
					constraintName: 'songs_release_event_id_foreign',
					columnNames: ['release_event_id'],
					localTableName: 'songs',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				author: {
					name: 'author',
					type: 'varchar(100)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 100,
					mappedType: 'string',
				},
				name: {
					name: 'name',
					type: 'varchar(200)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 200,
					mappedType: 'string',
				},
				pv_id: {
					name: 'pv_id',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				pv_type: {
					name: 'pv_type',
					type: "enum('Original', 'Reprint', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Original', 'Reprint', 'Other'],
					mappedType: 'enum',
				},
				service: {
					name: 'service',
					type: "enum('NicoNicoDouga', 'Youtube', 'SoundCloud', 'Vimeo', 'Piapro', 'Bilibili', 'File', 'LocalFile', 'Creofuga', 'Bandcamp')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: [
						'NicoNicoDouga',
						'Youtube',
						'SoundCloud',
						'Vimeo',
						'Piapro',
						'Bilibili',
						'File',
						'LocalFile',
						'Creofuga',
						'Bandcamp',
					],
					mappedType: 'enum',
				},
				extended_metadata: {
					name: 'extended_metadata',
					type: 'json',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'json',
				},
				publish_date: {
					name: 'publish_date',
					type: 'datetime',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 0,
					mappedType: 'datetime',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'pvs_for_songs',
			indexes: [
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'pvs_for_songs_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				pvs_for_songs_song_id_foreign: {
					constraintName: 'pvs_for_songs_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'pvs_for_songs',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				source: {
					name: 'source',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				text: {
					name: 'text',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				culture_code: {
					name: 'culture_code',
					type: 'varchar(10)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 10,
					mappedType: 'string',
				},
				translation_type: {
					name: 'translation_type',
					type: "enum('Original', 'Romanized', 'Translation')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Original', 'Romanized', 'Translation'],
					mappedType: 'enum',
				},
				url: {
					name: 'url',
					type: 'varchar(500)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 500,
					mappedType: 'string',
				},
			},
			name: 'lyrics_for_songs',
			indexes: [
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'lyrics_for_songs_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				lyrics_for_songs_song_id_foreign: {
					constraintName: 'lyrics_for_songs_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'lyrics_for_songs',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				name: {
					name: 'name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'string',
				},
				roles: {
					name: 'roles',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				is_support: {
					name: 'is_support',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
			},
			name: 'artists_for_songs',
			indexes: [
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artists_for_songs_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'artists_for_songs_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artists_for_songs_artist_id_foreign: {
					constraintName: 'artists_for_songs_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artists_for_songs',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
				artists_for_songs_song_id_foreign: {
					constraintName: 'artists_for_songs_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'artists_for_songs',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				disc_number: {
					name: 'disc_number',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				name: {
					name: 'name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'string',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				track_number: {
					name: 'track_number',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'songs_in_albums',
			indexes: [
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'songs_in_albums_album_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'songs_in_albums_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				songs_in_albums_album_id_foreign: {
					constraintName: 'songs_in_albums_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'songs_in_albums',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
				songs_in_albums_song_id_foreign: {
					constraintName: 'songs_in_albums_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'songs_in_albums',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				language: {
					name: 'language',
					type: 'varchar(16)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 16,
					mappedType: 'string',
				},
				value: {
					name: 'value',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'song_names',
			indexes: [
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'song_names_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				song_names_song_id_foreign: {
					constraintName: 'song_names_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'song_names',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Official', 'Commercial', 'Reference', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Official', 'Commercial', 'Reference', 'Other'],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				url: {
					name: 'url',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				disabled: {
					name: 'disabled',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'song_web_links',
			indexes: [
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'song_web_links_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				song_web_links_song_id_foreign: {
					constraintName: 'song_web_links_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'song_web_links',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category_name: {
					name: 'category_name',
					type: 'varchar(30)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 30,
					mappedType: 'string',
				},
				description_original: {
					name: 'description_original',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				description_english: {
					name: 'description_english',
					type: 'text',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'text',
				},
				hide_from_suggestions: {
					name: 'hide_from_suggestions',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				parent_id: {
					name: 'parent_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: true,
					mappedType: 'integer',
				},
				default_name_language: {
					name: 'default_name_language',
					type: "enum('Unspecified', 'Japanese', 'Romaji', 'English')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Unspecified', 'Japanese', 'Romaji', 'English'],
					mappedType: 'enum',
				},
				japanese_name: {
					name: 'japanese_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				english_name: {
					name: 'english_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				romaji_name: {
					name: 'romaji_name',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				targets: {
					name: 'targets',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				thumb_mime: {
					name: 'thumb_mime',
					type: 'varchar(30)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: true,
					length: 30,
					mappedType: 'string',
				},
			},
			name: 'tags',
			indexes: [
				{
					columnNames: ['parent_id'],
					composite: false,
					keyName: 'tags_parent_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				tags_parent_id_foreign: {
					constraintName: 'tags_parent_id_foreign',
					columnNames: ['parent_id'],
					localTableName: 'tags',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					deleteRule: 'set null',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				count: {
					name: 'count',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				song_id: {
					name: 'song_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'song_tag_usages',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'song_tag_usages_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['song_id'],
					composite: false,
					keyName: 'song_tag_usages_song_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				song_tag_usages_tag_id_foreign: {
					constraintName: 'song_tag_usages_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'song_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
				song_tag_usages_song_id_foreign: {
					constraintName: 'song_tag_usages_song_id_foreign',
					columnNames: ['song_id'],
					localTableName: 'song_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'songs',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				count: {
					name: 'count',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				release_event_id: {
					name: 'release_event_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'release_event_tag_usages',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'release_event_tag_usages_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['release_event_id'],
					composite: false,
					keyName: 'release_event_tag_usages_release_event_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_event_tag_usages_tag_id_foreign: {
					constraintName: 'release_event_tag_usages_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'release_event_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
				release_event_tag_usages_release_event_id_foreign: {
					constraintName:
						'release_event_tag_usages_release_event_id_foreign',
					columnNames: ['release_event_id'],
					localTableName: 'release_event_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'release_events',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				count: {
					name: 'count',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				release_event_series_id: {
					name: 'release_event_series_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'release_event_series_tag_usages',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'release_event_series_tag_usages_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['release_event_series_id'],
					composite: false,
					keyName:
						'release_event_series_tag_usages_release_event_series_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				release_event_series_tag_usages_tag_id_foreign: {
					constraintName:
						'release_event_series_tag_usages_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'release_event_series_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
				release_event_series_tag_usages_release_event_series_id_foreign:
					{
						constraintName:
							'release_event_series_tag_usages_release_event_series_id_foreign',
						columnNames: ['release_event_series_id'],
						localTableName: 'release_event_series_tag_usages',
						referencedColumnNames: ['id'],
						referencedTableName: 'release_event_series',
						updateRule: 'cascade',
					},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				owner_tag_id: {
					name: 'owner_tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				linked_tag_id: {
					name: 'linked_tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'related_tags',
			indexes: [
				{
					columnNames: ['owner_tag_id'],
					composite: false,
					keyName: 'related_tags_owner_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['linked_tag_id'],
					composite: false,
					keyName: 'related_tags_linked_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				related_tags_owner_tag_id_foreign: {
					constraintName: 'related_tags_owner_tag_id_foreign',
					columnNames: ['owner_tag_id'],
					localTableName: 'related_tags',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
				related_tags_linked_tag_id_foreign: {
					constraintName: 'related_tags_linked_tag_id_foreign',
					columnNames: ['linked_tag_id'],
					localTableName: 'related_tags',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				count: {
					name: 'count',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				artist_id: {
					name: 'artist_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'artist_tag_usages',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'artist_tag_usages_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['artist_id'],
					composite: false,
					keyName: 'artist_tag_usages_artist_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				artist_tag_usages_tag_id_foreign: {
					constraintName: 'artist_tag_usages_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'artist_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
				artist_tag_usages_artist_id_foreign: {
					constraintName: 'artist_tag_usages_artist_id_foreign',
					columnNames: ['artist_id'],
					localTableName: 'artist_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'artists',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				count: {
					name: 'count',
					type: 'int',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
				album_id: {
					name: 'album_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'album_tag_usages',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'album_tag_usages_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					columnNames: ['album_id'],
					composite: false,
					keyName: 'album_tag_usages_album_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				album_tag_usages_tag_id_foreign: {
					constraintName: 'album_tag_usages_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'album_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
				album_tag_usages_album_id_foreign: {
					constraintName: 'album_tag_usages_album_id_foreign',
					columnNames: ['album_id'],
					localTableName: 'album_tag_usages',
					referencedColumnNames: ['id'],
					referencedTableName: 'albums',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				language: {
					name: 'language',
					type: 'varchar(16)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 16,
					mappedType: 'string',
				},
				value: {
					name: 'value',
					type: 'varchar(255)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'string',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'tag_names',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'tag_names_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				tag_names_tag_id_foreign: {
					constraintName: 'tag_names_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'tag_names',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
			},
		},
		{
			columns: {
				id: {
					name: 'id',
					type: 'int',
					unsigned: true,
					autoincrement: true,
					primary: true,
					nullable: false,
					mappedType: 'integer',
				},
				category: {
					name: 'category',
					type: "enum('Official', 'Commercial', 'Reference', 'Other')",
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					enumItems: ['Official', 'Commercial', 'Reference', 'Other'],
					mappedType: 'enum',
				},
				description: {
					name: 'description',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				url: {
					name: 'url',
					type: 'varchar(512)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					length: 512,
					mappedType: 'string',
				},
				disabled: {
					name: 'disabled',
					type: 'tinyint(1)',
					unsigned: false,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'boolean',
				},
				tag_id: {
					name: 'tag_id',
					type: 'int',
					unsigned: true,
					autoincrement: false,
					primary: false,
					nullable: false,
					mappedType: 'integer',
				},
			},
			name: 'tag_web_links',
			indexes: [
				{
					columnNames: ['tag_id'],
					composite: false,
					keyName: 'tag_web_links_tag_id_index',
					primary: false,
					unique: false,
				},
				{
					keyName: 'PRIMARY',
					columnNames: ['id'],
					composite: false,
					primary: true,
					unique: true,
				},
			],
			checks: [],
			foreignKeys: {
				tag_web_links_tag_id_foreign: {
					constraintName: 'tag_web_links_tag_id_foreign',
					columnNames: ['tag_id'],
					localTableName: 'tag_web_links',
					referencedColumnNames: ['id'],
					referencedTableName: 'tags',
					updateRule: 'cascade',
				},
			},
		},
	],
} as const;
